Данная программа является свободным программным обеспечением, распространяющимся по лицензии MIT.
Копия лицензии: https://opensource.org/licenses/MIT

Copyright (c) 2024 Otto
Автор: Otto
Версия: 20.06.24
GitHub страница:  https://github.com/Otto17/DAVrun
GitFlic страница: https://gitflic.ru/project/otto/davrun

г. Омск 2024



Использовал среду разработки "Visual Studio 2022", версия C#: 12


ОПИСАНИЕ РАБОТЫ С ПРОГРАММОЙ "Cliant DAVrun".

При первом запуске программы в папке пользователя (от которого запущена программа) создаётся зашифрованных (AES-256) конфиг файл по шаблону,
в конфиге будут храниться данные для подключения к SSH, мастер-пароль, счётчик кол-ва попыток ввода мастер-пароля, пути директорий на сервере и названия групп и подгрупп.
Расположен конфиг файл будет по пути "%LocalAppData%/Client DAVrun", то есть, для каждого пользователя в системе будет свой конфиг файл.

При установке галочки "Запомнить" (все поля при этом должны быть заполнены), появится окно установки мастер-пароля (максимум 64 символа),
если отказаться от ввода мастер-пароля, тогда сохранить данные подключения по SSH в конфиге не получиться. ИСПОЛЬЗУЙТЕ СЛОЖНЫЙ МАСТЕР-ПАРОЛЬ!

При перезапуске программы всплывёт маленькое окно ввода мастер-пароля, по умолчанию даётся 5 попыток, если попытки ввода пароля исчерпаны,
тогда конфиг файл удаляется и программа закрывается, при перезапуске программы создаётся новый конфиг по шаблону.
Счётчик попыток так же запоминается в конфиге и перезапуск программы не поможет обнулить его. Счётчик восстанавливает кол-во попыток, только если был введён верный пароль.
Зашифрованный конфиг так же сразу удалиться при запуске программы, если попытаться что-то в нём изменить вручную, через текстовый редактор,
либо если попытаться открыть его в другой копии скомпилированной программы Cliant DAVrun с другим ключом "AES-256" или "IV".

В этом же окне с подключением к SSH при нажатии кнопки с шестерёнкой (настройки) можно изменить мастер-пароль, названия групп, подгрупп,
названия каталогов и полного пути на сервере.

После успешной авторизации переходим на вкладку "Загрузка файлов", загружаем в выбранные группы и подгруппы подготовленные файлы с названиями имён ПК.
Пояснения:
	- Файлы с именами ПК это обычные пустые текстовые файлы без расширения.
	- Можно загружать файлы не просто с именами ПК (к примеру: "PC-NAME1"), а с описанием, чей это ПК или где он стоит,
	а после знака "=" имя компьютера (к примеру: "Мой домашний ПК=Home-User" или "г. Омск ул.Буржуйская,334 - мини сервер=Serv2").
Загружаем через "Выбрать файл" самораспаковывающийся архив (хеш сумма добавиться автоматически к имени файла, после расширения),
а так же отобразится внизу программы, хеш сумму можно скопировать, кликнув по ней.
При каждой загрузке "setup файла" старый самораспаковывающийся архив удаляется и сервер не превратится в файлопомойку.

Далее на вкладке "Файлы на сервере" выбираем нужную группу и подгруппу, жмём "Показать файлы", выбираем нужные файлы из списка и жмём "Установить на ПК",
так же можно отсюда удалить ненужные файлы с именами ПК из списка.

Переходим на вкладку "Процесс установки" и отсюда можно нажать кнопку "Обновить" и посмотреть список файлов,
которые готовы к установке и ждут опроса со стороны компьютеров от программы "DAVrun"
(по умолчанию опрос сервера от компьютеров с "DAVrun" составляет раз в 10 минут), так же можно отменить установку, выбрав из списка нужные имена ПК и нажав "Отменить установку".



КРАТКОЕ ОПИСАНИЕ ОСНОВНЫХ ОКОН В ПРОГРАММЕ.

Главное окна "Подключение по SSH":
- Защита (от дурака) для полей "Порт" (можно вводить только цифры от 0 до 65535) и "IP адрес/Домен" (запятые заменяются точками);
- Длина полей: "IP адрес/Домен" 32 символа, "Порт" 5 символов, "SSH Логин" 32 символа, "SSH Пароль" 64 символа.
- При установке галочки "Запомнить" требуется придумать мастер-пароль

Окно "Настройки":
- Можно сменить мастер-пароль (если он задан);
- Можно изменить стандартные названия для групп, подгрупп, а так же выключить их, если они не нужны;
- Можно изменить стандартные имена путей каталогов на сервере на свои;
- Длина полей: для "Группы и подгруппы" 12 символов, "Каталоги на Linux сервере" 24 символа;
- Названия, которые выделены отличным цветом от чёрного с подсказками, если на них кликнуть.

Окно "Управление":
- На вкладке "Загрузка файлов":
	А)Производится загрузка на сервер имён ПК в выбранную группу и подгруппу и самораспаковывающегося архива;
	Б)Вывод хеш-суммы SHA256 установочного файла с возможностью копирования при клике на нём;
	В)Для загрузки имён ПК можно использовать Drag and Drop панель (будет работать только если выключен UAC), эта же область является кнопкой, при щелчке на которую так же можно выбрать файлы в открывшемся окне.

- На вкладке "Файлы на сервере":
	А)Производится выбор имён ПК в группе и подгруппе для начала установки или удаления из выбранных файлов из списка.

- На вкладке "Процесс установки":
	А)Можно посмотреть какие ПК в данный момент ожидают установку самораспаковывающегося архива, а так же отменить установку на выбранных ПК.


КРАТКАЯ НАСТРОЙКА Visual Studio 2022 (для компиляции).

1) При установке VS 2022 отмечаем пункт "Разработка классических приложений .NET"
Так же можно вызвать Visual Studio Installer через окно создать новый проект и кликнуть
на ссылку "Установка других средств и компонентов".

2) Требуются сторонние библиотеки: "SSH.NET" для работы с SSH и SFTP, "Newtonsoft.Json" для работы с JSON и "Costura.Fody" для простой, автоматической сборки одного *.exe файла со всеми сторонними библиотеками (но из за него проект сильно "жирным" становится и много мелких файлов, но это не так важно, так как компилировать один раз всего придётся).
Заходим в Проект -> Управление пакетами NuGet...
В окне жмём Обзор и пишем в поиске по очереди и устанавливаем со всеми зависимостями: "SSH.NET", "Newtonsoft.Json" и "Costura.Fody".

P.S. ОБЯЗАТЕЛЬНО перед компиляцией программы сгенерировать и заменить в главном классе "Connect" ключ шифрования "AES-256" и Вектор Инициализации "IV".
Для генерации AES-256 и IV использовать генератор "Keygen bytes AES-256 - key_IV.exe", который так же есть в проекте программы.
После запуска кейгена рядом появится текстовый файл "Output_key_IV.txt", в котором будут рандомный ключ и Вектор Инициализации в байтовом формате для данной программы.
После копирования стереть этот файл и удалить из исходного кода (либо удалить сам исходный код), файл "Output_key_IV.txt" больше не пригодятся и хранить его НЕ безопасно.


КРАТКО ПРО НЕБОЛЬШУЮ БЕЗОПАСНОСТЬ
1) Все настройки хранятся в зашифрованном конфиг файла по стандарту AES-256, которых создаётся для каждого пользователя в системе отдельно.

2) Встроена защита от дебагеров, работающая по двум методам проверок:
	А)"Debugger.IsAttached" - встроенный метод в ".NET", проверяющий, прикреплен ли отладчик.
	Б)"IsDebuggerPresent()" - вызов внешнего метода из библиотеки Windows API, который также проверяет наличие отладчика.

3) Встроена защита от запуска на некоторых виртуальных машинах для усложнения взлома или обхода контрольных механизмов безопасности (оставил её отключённой в коде [program.cs], так как вызывала проблемы с обфускацией программы).

4) Обфусцируем программу "Cliant DAVrun" после компиляции, что бы хоть как то защитить от "мамкиного хакера" при декомпиляции ключ шифрования и Вектор инициализации.

4.1) Для обфускации распаковываем из папки "Стороннее ПО" обфускатор "NetShield Protector" (антивирус может ложно ругаться на программу, яко бы это троян), это из-за специфического поведения программы.
Запускаем обфускатор и выбираем скомпилированный файл "Client DAVrun", ставим галочки "Encode String with Base64" и "INT Confusion", жмём кнопку "Protect", готово. Обфусцированный файл появится в папке с программой "NetShield Protector", а исходный файл удаляем.

Можно ещё упаковать в контейнер "Packing", либо сделать привязку к железу "HWID" или к USB устройству (но учтите, что антивирусам это может не понравиться).
Не стоит выбирать другие пункты из панели "Obfuscastion", это может нарушить логику данной работы программы.

P.S. Возможно потом как ни будь дойдут руки и исправлю программу для более серьёзной защиты.
